[project]
name = "project-backend"
version = "0.1.0"
description = "Backend API for Project"
readme = "README.md"
requires-python = ">=3.12"
license = {text = "MIT"}
dependencies = [
    "django>=5.1",
    "django-ninja>=1.3",
    "psycopg[binary]>=3.2",
    "python-decouple>=3.8",
    "django-cors-headers>=4.5",
    "gunicorn>=23.0",
    "redis>=5.1",
    "celery>=5.4",
    "pydantic>=2.9",
    "pydantic-settings>=2.5",
    "dj-database-url>=2.3",
    "whitenoise>=6.8",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.3",
    "pytest-django>=4.9",
    "pytest-cov>=5.0",
    "factory-boy>=3.3",
    "ruff>=0.6",
    "mypy>=1.11",
    "django-stubs[compatible-mypy]>=5.1",
    "ipython>=8.27",
]

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "config.settings"
python_files = ["test_*.py", "*_test.py"]
addopts = "-v --tb=short"

[tool.ruff]
line-length = 88
target-version = "py312"
src = ["backend"]

[tool.ruff.lint]
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "UP",   # pyupgrade
    "ARG",  # flake8-unused-arguments
    "SIM",  # flake8-simplify
    "TID",  # flake8-tidy-imports
]
ignore = [
    "E501",  # line too long (handled by formatter)
    "B008",  # do not perform function calls in argument defaults
]

[tool.ruff.lint.per-file-ignores]
"*/migrations/*" = ["E501"]  # Allow long lines in migrations
"*/tests/*" = ["ARG"]  # Allow unused arguments in tests

[tool.ruff.lint.isort]
known-first-party = ["apps", "config"]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
ignore_missing_imports = true
plugins = ["mypy_django_plugin.main"]