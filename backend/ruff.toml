line-length = 88
target-version = "py312"
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    "venv",
    ".venv",
    "*.egg-info",
    "frontend/node_modules",
    "frontend/.next",
    "frontend/out",
]

[lint]
select = [
    "ALL",  # Enable all available rules
]

ignore = [
    # Keep some pragmatic ignores for Django projects
    "E501",   # line too long (handled by formatter)
    "D100",   # Missing docstring in public module
    "D101",   # Missing docstring in public class
    "D102",   # Missing docstring in public method
    "D103",   # Missing docstring in public function
    "D104",   # Missing docstring in public package
    "D105",   # Missing docstring in magic method
    "D106",   # Missing docstring in public nested class
    "D107",   # Missing docstring in __init__
    "D203",   # 1 blank line required before class docstring (conflicts with D211)
    "D213",   # Multi-line docstring summary should start at the second line (conflicts with D212)
    "FIX002", # TODO comments are acceptable in development code
    "TD002",  # Missing author in TODO
    "TD003",  # Missing issue link for this TODO
    "COM812", # Trailing comma missing (conflicts with formatter)
    "ISC001", # Single line implicit string concatenation (conflicts with formatter)
]

[lint.per-file-ignores]
"__init__.py" = [
    "F401",   # Unused imports (common in __init__ files)
    "E402",   # Module level import not at top
]
"*/migrations/*" = [
    "E501",   # Long lines in migrations
    "N806",   # Variable names (Django migration style)
    "N999",   # Invalid module name
    "RUF012", # Mutable class attributes
]
"tests/**" = [
    "S101",   # Use of assert (required for pytest)
    "S106",   # Hardcoded password (test fixtures need passwords)
    "ARG001", # Unused function argument
    "ARG002", # Unused method argument
    "PLR2004", # Magic value comparison
    "S311",   # Pseudo-random generators
    "ANN401", # Dynamically typed expressions (pytest fixtures use Any)
]
"**/settings.py" = [
    "F401",   # Unused imports (settings import pattern)
    "S105",   # Hardcoded password (for default Django settings)
    "ERA001", # Commented out code (common in settings)
]
"manage.py" = [
    "T201",   # Print found (Django's manage.py uses print)
]
"**/admin.py" = [
    "RUF012", # Mutable class attributes (Django admin pattern)
]

[lint.extend-per-file-ignores]
"*/conftest.py" = [
    "ARG001", # Unused function argument (fixtures)
]

[lint.flake8-quotes]
inline-quotes = "double"
multiline-quotes = "double"
docstring-quotes = "double"

[lint.flake8-bugbear]
extend-immutable-calls = ["django.conf.settings.configure", "pydantic.Field"]

[lint.flake8-tidy-imports]
ban-relative-imports = "all"

[lint.flake8-type-checking]
strict = true

[lint.isort]
known-first-party = ["apps", "config"]
known-third-party = ["django"]
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]

[lint.pylint]
max-args = 6
max-branches = 12
max-returns = 6
max-statements = 50

[lint.mccabe]
max-complexity = 10

[format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
